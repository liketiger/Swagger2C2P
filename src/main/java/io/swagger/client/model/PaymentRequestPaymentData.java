package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * PaymentRequestPaymentData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-21T23:50:31.361Z[GMT]")
public class PaymentRequestPaymentData {
  @SerializedName("name")
  private String name = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("mobileNo")
  private String mobileNo = null;

  @SerializedName("accountNo")
  private String accountNo = null;

  @SerializedName("securePayToken")
  private String securePayToken = null;

  @SerializedName("cardBank")
  private String cardBank = null;

  @SerializedName("cardCountry")
  private String cardCountry = null;

  @SerializedName("cardTokenize")
  private String cardTokenize = null;

  @SerializedName("interestType")
  private String interestType = null;

  @SerializedName("installmentPeriod")
  private String installmentPeriod = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("qrType")
  private String qrType = null;

  @SerializedName("fxRateID")
  private String fxRateID = null;

  @SerializedName("paymentExpiry")
  private String paymentExpiry = null;

  @SerializedName("billingAddress1")
  private String billingAddress1 = null;

  @SerializedName("billingAddress2")
  private String billingAddress2 = null;

  @SerializedName("billingAddress3")
  private String billingAddress3 = null;

  @SerializedName("billingState")
  private String billingState = null;

  @SerializedName("billingCity")
  private String billingCity = null;

  @SerializedName("billingPostalCode")
  private String billingPostalCode = null;

  @SerializedName("billingCountryCode")
  private String billingCountryCode = null;

  @SerializedName("shippingAddress1")
  private String shippingAddress1 = null;

  @SerializedName("shippingAddress2")
  private String shippingAddress2 = null;

  @SerializedName("shippingAddress3")
  private String shippingAddress3 = null;

  @SerializedName("shippingCity")
  private String shippingCity = null;

  @SerializedName("shippingState")
  private String shippingState = null;

  @SerializedName("shippingPostalCode")
  private String shippingPostalCode = null;

  @SerializedName("shippingCountryCode")
  private String shippingCountryCode = null;

  public PaymentRequestPaymentData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Conditional / Character 50
   * @return name
  **/
  @Schema(description = "Conditional / Character 50")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PaymentRequestPaymentData email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Conditional / Character 150
   * @return email
  **/
  @Schema(description = "Conditional / Character 150")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public PaymentRequestPaymentData mobileNo(String mobileNo) {
    this.mobileNo = mobileNo;
    return this;
  }

   /**
   * Optional / Character 255
   * @return mobileNo
  **/
  @Schema(description = "Optional / Character 255")
  public String getMobileNo() {
    return mobileNo;
  }

  public void setMobileNo(String mobileNo) {
    this.mobileNo = mobileNo;
  }

  public PaymentRequestPaymentData accountNo(String accountNo) {
    this.accountNo = accountNo;
    return this;
  }

   /**
   * Optional / Character 255
   * @return accountNo
  **/
  @Schema(description = "Optional / Character 255")
  public String getAccountNo() {
    return accountNo;
  }

  public void setAccountNo(String accountNo) {
    this.accountNo = accountNo;
  }

  public PaymentRequestPaymentData securePayToken(String securePayToken) {
    this.securePayToken = securePayToken;
    return this;
  }

   /**
   * Conditional / Character 255 / SecurePay encrypted token, generated by SecurePaySDK
   * @return securePayToken
  **/
  @Schema(description = "Conditional / Character 255 / SecurePay encrypted token, generated by SecurePaySDK")
  public String getSecurePayToken() {
    return securePayToken;
  }

  public void setSecurePayToken(String securePayToken) {
    this.securePayToken = securePayToken;
  }

  public PaymentRequestPaymentData cardBank(String cardBank) {
    this.cardBank = cardBank;
    return this;
  }

   /**
   * Optional / Character 255 / Credit card issuer bank
   * @return cardBank
  **/
  @Schema(description = "Optional / Character 255 / Credit card issuer bank")
  public String getCardBank() {
    return cardBank;
  }

  public void setCardBank(String cardBank) {
    this.cardBank = cardBank;
  }

  public PaymentRequestPaymentData cardCountry(String cardCountry) {
    this.cardCountry = cardCountry;
    return this;
  }

   /**
   * Optional / Character 255 / Credit card issuer country
   * @return cardCountry
  **/
  @Schema(description = "Optional / Character 255 / Credit card issuer country")
  public String getCardCountry() {
    return cardCountry;
  }

  public void setCardCountry(String cardCountry) {
    this.cardCountry = cardCountry;
  }

  public PaymentRequestPaymentData cardTokenize(String cardTokenize) {
    this.cardTokenize = cardTokenize;
    return this;
  }

   /**
   * Optional / Boolean / Allow customer to tokenize card information
   * @return cardTokenize
  **/
  @Schema(description = "Optional / Boolean / Allow customer to tokenize card information")
  public String getCardTokenize() {
    return cardTokenize;
  }

  public void setCardTokenize(String cardTokenize) {
    this.cardTokenize = cardTokenize;
  }

  public PaymentRequestPaymentData interestType(String interestType) {
    this.interestType = interestType;
    return this;
  }

   /**
   * Optional / Alphabet 1 / Installment interest type
   * @return interestType
  **/
  @Schema(description = "Optional / Alphabet 1 / Installment interest type")
  public String getInterestType() {
    return interestType;
  }

  public void setInterestType(String interestType) {
    this.interestType = interestType;
  }

  public PaymentRequestPaymentData installmentPeriod(String installmentPeriod) {
    this.installmentPeriod = installmentPeriod;
    return this;
  }

   /**
   * Optional / Numeric 2 / Installment period in month
   * @return installmentPeriod
  **/
  @Schema(description = "Optional / Numeric 2 / Installment period in month")
  public String getInstallmentPeriod() {
    return installmentPeriod;
  }

  public void setInstallmentPeriod(String installmentPeriod) {
    this.installmentPeriod = installmentPeriod;
  }

  public PaymentRequestPaymentData token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Optional / Character 255 / Token from card token ID or digital payment
   * @return token
  **/
  @Schema(description = "Optional / Character 255 / Token from card token ID or digital payment")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public PaymentRequestPaymentData qrType(String qrType) {
    this.qrType = qrType;
    return this;
  }

   /**
   * Optional / Character 255 / QR data type (RAW-raw data string, BASE64-base 64 image stirng, URL-QR image URL)
   * @return qrType
  **/
  @Schema(description = "Optional / Character 255 / QR data type (RAW-raw data string, BASE64-base 64 image stirng, URL-QR image URL)")
  public String getQrType() {
    return qrType;
  }

  public void setQrType(String qrType) {
    this.qrType = qrType;
  }

  public PaymentRequestPaymentData fxRateID(String fxRateID) {
    this.fxRateID = fxRateID;
    return this;
  }

   /**
   * Optional / Character 255 / Exchange Rate ID
   * @return fxRateID
  **/
  @Schema(description = "Optional / Character 255 / Exchange Rate ID")
  public String getFxRateID() {
    return fxRateID;
  }

  public void setFxRateID(String fxRateID) {
    this.fxRateID = fxRateID;
  }

  public PaymentRequestPaymentData paymentExpiry(String paymentExpiry) {
    this.paymentExpiry = paymentExpiry;
    return this;
  }

   /**
   * Optional / Character 255 /  Payment Expiry Date (yyyy-MM-dd HH:mm:ss) and default to expiry date/time from payment token or configured on merchant profile
   * @return paymentExpiry
  **/
  @Schema(description = "Optional / Character 255 /  Payment Expiry Date (yyyy-MM-dd HH:mm:ss) and default to expiry date/time from payment token or configured on merchant profile")
  public String getPaymentExpiry() {
    return paymentExpiry;
  }

  public void setPaymentExpiry(String paymentExpiry) {
    this.paymentExpiry = paymentExpiry;
  }

  public PaymentRequestPaymentData billingAddress1(String billingAddress1) {
    this.billingAddress1 = billingAddress1;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 1
   * @return billingAddress1
  **/
  @Schema(description = "Optional / Character 255 / Address line 1")
  public String getBillingAddress1() {
    return billingAddress1;
  }

  public void setBillingAddress1(String billingAddress1) {
    this.billingAddress1 = billingAddress1;
  }

  public PaymentRequestPaymentData billingAddress2(String billingAddress2) {
    this.billingAddress2 = billingAddress2;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 2
   * @return billingAddress2
  **/
  @Schema(description = "Optional / Character 255 / Address line 2")
  public String getBillingAddress2() {
    return billingAddress2;
  }

  public void setBillingAddress2(String billingAddress2) {
    this.billingAddress2 = billingAddress2;
  }

  public PaymentRequestPaymentData billingAddress3(String billingAddress3) {
    this.billingAddress3 = billingAddress3;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 3
   * @return billingAddress3
  **/
  @Schema(description = "Optional / Character 255 / Address line 3")
  public String getBillingAddress3() {
    return billingAddress3;
  }

  public void setBillingAddress3(String billingAddress3) {
    this.billingAddress3 = billingAddress3;
  }

  public PaymentRequestPaymentData billingState(String billingState) {
    this.billingState = billingState;
    return this;
  }

   /**
   * Optional / Character 255 / Address state
   * @return billingState
  **/
  @Schema(description = "Optional / Character 255 / Address state")
  public String getBillingState() {
    return billingState;
  }

  public void setBillingState(String billingState) {
    this.billingState = billingState;
  }

  public PaymentRequestPaymentData billingCity(String billingCity) {
    this.billingCity = billingCity;
    return this;
  }

   /**
   * Optional / Character 255 / Address city
   * @return billingCity
  **/
  @Schema(description = "Optional / Character 255 / Address city")
  public String getBillingCity() {
    return billingCity;
  }

  public void setBillingCity(String billingCity) {
    this.billingCity = billingCity;
  }

  public PaymentRequestPaymentData billingPostalCode(String billingPostalCode) {
    this.billingPostalCode = billingPostalCode;
    return this;
  }

   /**
   * Optional / Alpha-Numeric 10 / Address postal code
   * @return billingPostalCode
  **/
  @Schema(description = "Optional / Alpha-Numeric 10 / Address postal code")
  public String getBillingPostalCode() {
    return billingPostalCode;
  }

  public void setBillingPostalCode(String billingPostalCode) {
    this.billingPostalCode = billingPostalCode;
  }

  public PaymentRequestPaymentData billingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
    return this;
  }

   /**
   * Optional / Alphabet 2 / Address country in A2 of ISO3166 format
   * @return billingCountryCode
  **/
  @Schema(description = "Optional / Alphabet 2 / Address country in A2 of ISO3166 format")
  public String getBillingCountryCode() {
    return billingCountryCode;
  }

  public void setBillingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
  }

  public PaymentRequestPaymentData shippingAddress1(String shippingAddress1) {
    this.shippingAddress1 = shippingAddress1;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 1
   * @return shippingAddress1
  **/
  @Schema(description = "Optional / Character 255 / Address line 1")
  public String getShippingAddress1() {
    return shippingAddress1;
  }

  public void setShippingAddress1(String shippingAddress1) {
    this.shippingAddress1 = shippingAddress1;
  }

  public PaymentRequestPaymentData shippingAddress2(String shippingAddress2) {
    this.shippingAddress2 = shippingAddress2;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 2
   * @return shippingAddress2
  **/
  @Schema(description = "Optional / Character 255 / Address line 2")
  public String getShippingAddress2() {
    return shippingAddress2;
  }

  public void setShippingAddress2(String shippingAddress2) {
    this.shippingAddress2 = shippingAddress2;
  }

  public PaymentRequestPaymentData shippingAddress3(String shippingAddress3) {
    this.shippingAddress3 = shippingAddress3;
    return this;
  }

   /**
   * Optional / Character 255 / Address line 3
   * @return shippingAddress3
  **/
  @Schema(description = "Optional / Character 255 / Address line 3")
  public String getShippingAddress3() {
    return shippingAddress3;
  }

  public void setShippingAddress3(String shippingAddress3) {
    this.shippingAddress3 = shippingAddress3;
  }

  public PaymentRequestPaymentData shippingCity(String shippingCity) {
    this.shippingCity = shippingCity;
    return this;
  }

   /**
   * Optional / Character 255 / Address city
   * @return shippingCity
  **/
  @Schema(description = "Optional / Character 255 / Address city")
  public String getShippingCity() {
    return shippingCity;
  }

  public void setShippingCity(String shippingCity) {
    this.shippingCity = shippingCity;
  }

  public PaymentRequestPaymentData shippingState(String shippingState) {
    this.shippingState = shippingState;
    return this;
  }

   /**
   * Optional / Character 255 / Address state
   * @return shippingState
  **/
  @Schema(description = "Optional / Character 255 / Address state")
  public String getShippingState() {
    return shippingState;
  }

  public void setShippingState(String shippingState) {
    this.shippingState = shippingState;
  }

  public PaymentRequestPaymentData shippingPostalCode(String shippingPostalCode) {
    this.shippingPostalCode = shippingPostalCode;
    return this;
  }

   /**
   * Optional / Alpha-Numeric 10 / Address postal code
   * @return shippingPostalCode
  **/
  @Schema(description = "Optional / Alpha-Numeric 10 / Address postal code")
  public String getShippingPostalCode() {
    return shippingPostalCode;
  }

  public void setShippingPostalCode(String shippingPostalCode) {
    this.shippingPostalCode = shippingPostalCode;
  }

  public PaymentRequestPaymentData shippingCountryCode(String shippingCountryCode) {
    this.shippingCountryCode = shippingCountryCode;
    return this;
  }

   /**
   * Optional / Alphabet 2 / Address country in A2 of ISO3166 format
   * @return shippingCountryCode
  **/
  @Schema(description = "Optional / Alphabet 2 / Address country in A2 of ISO3166 format")
  public String getShippingCountryCode() {
    return shippingCountryCode;
  }

  public void setShippingCountryCode(String shippingCountryCode) {
    this.shippingCountryCode = shippingCountryCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentRequestPaymentData paymentRequestPaymentData = (PaymentRequestPaymentData) o;
    return Objects.equals(this.name, paymentRequestPaymentData.name) &&
        Objects.equals(this.email, paymentRequestPaymentData.email) &&
        Objects.equals(this.mobileNo, paymentRequestPaymentData.mobileNo) &&
        Objects.equals(this.accountNo, paymentRequestPaymentData.accountNo) &&
        Objects.equals(this.securePayToken, paymentRequestPaymentData.securePayToken) &&
        Objects.equals(this.cardBank, paymentRequestPaymentData.cardBank) &&
        Objects.equals(this.cardCountry, paymentRequestPaymentData.cardCountry) &&
        Objects.equals(this.cardTokenize, paymentRequestPaymentData.cardTokenize) &&
        Objects.equals(this.interestType, paymentRequestPaymentData.interestType) &&
        Objects.equals(this.installmentPeriod, paymentRequestPaymentData.installmentPeriod) &&
        Objects.equals(this.token, paymentRequestPaymentData.token) &&
        Objects.equals(this.qrType, paymentRequestPaymentData.qrType) &&
        Objects.equals(this.fxRateID, paymentRequestPaymentData.fxRateID) &&
        Objects.equals(this.paymentExpiry, paymentRequestPaymentData.paymentExpiry) &&
        Objects.equals(this.billingAddress1, paymentRequestPaymentData.billingAddress1) &&
        Objects.equals(this.billingAddress2, paymentRequestPaymentData.billingAddress2) &&
        Objects.equals(this.billingAddress3, paymentRequestPaymentData.billingAddress3) &&
        Objects.equals(this.billingState, paymentRequestPaymentData.billingState) &&
        Objects.equals(this.billingCity, paymentRequestPaymentData.billingCity) &&
        Objects.equals(this.billingPostalCode, paymentRequestPaymentData.billingPostalCode) &&
        Objects.equals(this.billingCountryCode, paymentRequestPaymentData.billingCountryCode) &&
        Objects.equals(this.shippingAddress1, paymentRequestPaymentData.shippingAddress1) &&
        Objects.equals(this.shippingAddress2, paymentRequestPaymentData.shippingAddress2) &&
        Objects.equals(this.shippingAddress3, paymentRequestPaymentData.shippingAddress3) &&
        Objects.equals(this.shippingCity, paymentRequestPaymentData.shippingCity) &&
        Objects.equals(this.shippingState, paymentRequestPaymentData.shippingState) &&
        Objects.equals(this.shippingPostalCode, paymentRequestPaymentData.shippingPostalCode) &&
        Objects.equals(this.shippingCountryCode, paymentRequestPaymentData.shippingCountryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, email, mobileNo, accountNo, securePayToken, cardBank, cardCountry, cardTokenize, interestType, installmentPeriod, token, qrType, fxRateID, paymentExpiry, billingAddress1, billingAddress2, billingAddress3, billingState, billingCity, billingPostalCode, billingCountryCode, shippingAddress1, shippingAddress2, shippingAddress3, shippingCity, shippingState, shippingPostalCode, shippingCountryCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentRequestPaymentData {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    mobileNo: ").append(toIndentedString(mobileNo)).append("\n");
    sb.append("    accountNo: ").append(toIndentedString(accountNo)).append("\n");
    sb.append("    securePayToken: ").append(toIndentedString(securePayToken)).append("\n");
    sb.append("    cardBank: ").append(toIndentedString(cardBank)).append("\n");
    sb.append("    cardCountry: ").append(toIndentedString(cardCountry)).append("\n");
    sb.append("    cardTokenize: ").append(toIndentedString(cardTokenize)).append("\n");
    sb.append("    interestType: ").append(toIndentedString(interestType)).append("\n");
    sb.append("    installmentPeriod: ").append(toIndentedString(installmentPeriod)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    qrType: ").append(toIndentedString(qrType)).append("\n");
    sb.append("    fxRateID: ").append(toIndentedString(fxRateID)).append("\n");
    sb.append("    paymentExpiry: ").append(toIndentedString(paymentExpiry)).append("\n");
    sb.append("    billingAddress1: ").append(toIndentedString(billingAddress1)).append("\n");
    sb.append("    billingAddress2: ").append(toIndentedString(billingAddress2)).append("\n");
    sb.append("    billingAddress3: ").append(toIndentedString(billingAddress3)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingPostalCode: ").append(toIndentedString(billingPostalCode)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("    shippingAddress1: ").append(toIndentedString(shippingAddress1)).append("\n");
    sb.append("    shippingAddress2: ").append(toIndentedString(shippingAddress2)).append("\n");
    sb.append("    shippingAddress3: ").append(toIndentedString(shippingAddress3)).append("\n");
    sb.append("    shippingCity: ").append(toIndentedString(shippingCity)).append("\n");
    sb.append("    shippingState: ").append(toIndentedString(shippingState)).append("\n");
    sb.append("    shippingPostalCode: ").append(toIndentedString(shippingPostalCode)).append("\n");
    sb.append("    shippingCountryCode: ").append(toIndentedString(shippingCountryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
